version: '2'

services:
  database:
    container_name: dspace_db
    image: postgres:10-alpine
    volumes:
      - ./postgresData:/var/lib/postgresql/data
    restart: always
    environment:
      - POSTGRES_ADMIN_USER=postgres
      - POSTGRES_ADMIN_PASSWORD=postgres
      - POSTGRES_PASSWORD=postgres
# The dspace service will use an existing dspace:latest image, otherwise one
# will be built from the local context (.). The 'image' command is important
# because it sets the name of the resulting image to be dspace:latest rather
# than the name of the current directory, ie docker-dspace.
  dspace:
    container_name: dspace
    build: .
    image: dspace:latest
    ports:
      - 2641:2641
      - 8000:8000
      - 8080:8080
      - 5000:5000
    depends_on:
      - database
    environment:
      - POSTGRES_DB_HOST=dspace_db
      - POSTGRES_DB_PORT=5432
      - POSTGRES_USER=dspace
      - POSTGRES_PASSWORD=dspace
      - POSTGRES_SCHEMA=dspace
      - POSTGRES_ADMIN_USER=postgres
      - POSTGRES_ADMIN_PASSWORD=postgres
      - ADMIN_EMAIL=moayad@codeobia.com
      - ADMIN_FIRSTNAME=Moayad
      - ADMIN_LASTNAME=Najdawi
      - ADMIN_PASSWD=ADMIN_PASSWD
    restart: always
    volumes:
#      - ./solrData:/dspace/solr
      - ./assetstore:/dspace/assetstore
      - ./dspace_logs/dspace:/dspace/log/
      - ./dspace_logs/tomcat:/usr/local/tomcat/logs/

# vim: set sw=2 ts=2: